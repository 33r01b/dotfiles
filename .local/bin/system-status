#!/bin/bash
# Network speed stuff stolen from http://linuxclues.blogspot.sg/2009/11/shell-script-show-network-speed.html

print_wifi() {
	ip=$(ip route get 8.8.8.8 2>/dev/null|grep -Eo 'src [0-9.]+'|grep -Eo '[0-9.]+')
	if=wlp61s0
		while IFS=$': \t' read -r label value
		do
			case $label in SSID) SSID=$value
				;;
			signal) SIGNAL=$value
				;;
		esac
	done < <(iw "$if" link)
	echo -e "$SSID $SIGNAL  $ip"
}

print_mem(){
	echo $(($(grep -m1 'MemAvailable:' /proc/meminfo | awk '{print $2}') / 1024)) "MiB"
}

print_cpu () {
    read cpu a b c previdle rest < /proc/stat
    prevtotal=$((a+b+c+previdle))
    sleep 0.5
    read cpu a b c idle rest < /proc/stat
    total=$((a+b+c+idle))
    cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
    echo "cpu ${cpu}%"
}

print_network(){
    logfile=/dev/shm/netlog
    [ -f "$logfile" ] || echo "0 0" > "$logfile"
    read -r rxprev txprev < "$logfile"

    rxcurrent="$(($(paste -d '+' /sys/class/net/[ew]*/statistics/rx_bytes)))"
    rbps=`expr $rxcurrent - $rxprev`
    rkbps=`expr $rbps / 1024`

    txcurrent="$(($(paste -d '+' /sys/class/net/[ew]*/statistics/tx_bytes)))"
    tbps=`expr $txcurrent - $txprev`
    tkbps=`expr $tbps / 1024`

    echo -e "down $rkbps kB/s up $tkbps kB/s"

    echo "$rxcurrent $txcurrent" > "$logfile"
}

print_temp(){
	test -f /sys/class/thermal/thermal_zone0/temp || return 0
	echo $(head -c 2 /sys/class/thermal/thermal_zone0/temp)C
}

print_bat(){
	hash acpi || return 0
	onl="$(grep "on-line" <(acpi -V))"
	charge="$(awk '{ sum += $1 } END { print sum }' /sys/class/power_supply/BAT*/capacity)"
	if test -z "$onl"
	then
		# suspend when we close the lid
		#systemctl --user stop inhibit-lid-sleep-on-battery.service
		echo -e "bat ${charge}%"
	else
		# On mains! no need to suspend
		#systemctl --user start inhibit-lid-sleep-on-battery.service
		echo -e "bat+ ${charge}%"
	fi
}

print_date(){
	echo $(date "+%a %m-%d %H:%M")
}

print_diskspace(){
    echo $(df -Ph / | tail -1 | awk '{print $4}')
}

print_bluetooth(){
    on=$(bluetoothctl show | grep "Powered: yes")
	if test "$on"
	then
		echo -e " ï–® "
	fi
}

# echo " $(print_cpu)  $(print_temp)  $(print_mem)  $(print_diskspace)  $(print_network)  $(print_bat)  $(print_date)$(print_bluetooth)"
echo " $(print_cpu)  $(print_temp)  $(print_mem)  $(print_diskspace)  $(print_network)  $(print_bat)  $(print_date)"
